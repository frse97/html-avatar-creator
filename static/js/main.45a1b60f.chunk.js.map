{"version":3,"sources":["components/Header/Header.tsx","components/Logo/Logo.tsx","components/MainContainer/MainContainer.tsx","components/Navigation/NavigationToggle/NavigationToggle.tsx","components/Navigation/NavigationListItem/NavigationListItem.tsx","components/Navigation/NavigationList/NavigationList.tsx","components/Navigation/Navigation.tsx","components/Playground/Playground.tsx","i18n.ts","models/theme.model.ts","utils/theme.utils.ts","utils/forms.utils.ts","components/Forms/Forms.utils.ts","components/Forms/Components/Circle.tsx","components/Forms/Components/Triangle.tsx","components/Settings/ThemeSwitch/ThemeSwitch.tsx","components/Settings/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","children","className","Logo","MainContainer","style","isNavOpen","classNames","cs","NavigationToggle","isOpen","handleNavToggle","onClick","NavigationListItem","name","icon","isSelected","onHandleClick","NavigationList","navItems","selected","handleNavItemClick","navListClassName","map","item","i","key","Navigation","Playground","lngs","en","nativeName","de","it","i18n","use","Backend","LanguageDetector","initReactI18next","init","debug","fallbackLng","interpolation","escapeValue","backend","loadPath","process","ns","defaultNS","react","useSuspense","wait","ITheme","changeTheme","type","document","documentElement","setAttribute","toRem","size","getCommonStyles","bgColor","borderRadius","position","scale","rotation","backgroundColor","top","right","bottom","left","transform","Circle","circleStyle","width","height","defaultProps","memo","Triangle","direction","TriangleStyle","triangleDirectionStyles","borderLeft","borderRight","borderBottom","borderTop","getTriangleDirection","undefined","ThemeSwitchIcon","onHandleTheme","ThemeSwitch","current","onHandleThemeChange","light","dark","SettingsWheel","Settings","useState","setIsOpen","handleSettingsVisibleChange","useCallback","onKeyDown","App","useTranslation","t","setIsNavOpen","selectedItem","setSelectedItem","activeTheme","setActiveTheme","navigationItems","onInitialRender","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","toggleTheme","handleOnToggleClick","handleOnNavItemClick","onRender","Object","keys","lng","fontWeight","language","changeLanguage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","fallback","getElementById"],"mappings":"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","file":"static/js/main.45a1b60f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Logo } from '..';\r\nimport './Header.scss';\r\n\r\ninterface IHeader {\r\n\r\n}\r\n\r\nconst Header: React.FC<IHeader> = props => {\r\n  const { children } = props;\r\n\r\n  return <header className=\"hac-header\">\r\n    <span>HTML</span>\r\n    <Logo />\r\n    <span>Creator</span>\r\n    {children}\r\n  </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './Logo.scss';\r\n\r\ninterface ILogo {}\r\n\r\nconst Logo: React.FC<ILogo> = () => {\r\n  return (\r\n    <div className=\"hac-logo\">\r\n      <div className=\"hac-logo-head\">\r\n        <div className=\"hac-logo-eye\" />\r\n      </div>\r\n      <div className=\"hac-logo-neck\" />\r\n      <div className=\"hac-logo-body\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport './MainContainer.scss';\r\nimport { IHasClassname, IHasStyles } from './../../models/common.model';\r\nimport cs from 'classnames';\r\n\r\ninterface IMainContainer extends IHasClassname, IHasStyles {\r\n  /**\r\n   * A flag indicating if the navbar is open\r\n   */\r\n   isNavOpen: boolean;\r\n}\r\n\r\n/**\r\n * The Main Component to display the playground in which the avatar can be changed\r\n * @param props \r\n */\r\nconst MainContainer: React.FC<IMainContainer> = props => {\r\n  const { className, style, children, isNavOpen } = props;\r\n\r\n  const classNames = cs(\"hac-main-container\", className, {\r\n    '--isnavopen': isNavOpen,\r\n  });\r\n\r\n  return <div className={classNames} style={style}>{children}</div>;\r\n}\r\n\r\nexport default MainContainer;","import React from \"react\";\r\nimport cs from \"classnames\";\r\nimport { INavigationToggle } from \"../navigation.model\";\r\nimport \"./NavigationToggle.scss\";\r\n\r\n/**\r\n * The NavigationToggle component is used to toggle the Navigation state beetween open/close\r\n */\r\nconst NavigationToggle: React.FC<INavigationToggle> = (props) => {\r\n  const { isOpen, handleNavToggle } = props;\r\n\r\n  const classNames = cs(\"navigation-toggle\", isOpen && \"--isopen\");\r\n\r\n  return (\r\n    <button className={classNames} onClick={handleNavToggle}>\r\n      <div className=\"line\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NavigationToggle;\r\n","import React from \"react\";\r\nimport cs from 'classnames';\r\nimport { INavigationListItem } from \"../navigation.model\";\r\nimport './NavigationListItem.scss';\r\n\r\nconst NavigationListItem: React.FC<INavigationListItem> = (props) => {\r\n  const { name, icon, isSelected, onHandleClick } = props;\r\n\r\n  const classNames = cs('navigation-list-item', {\r\n    'is-selected': isSelected,\r\n  })\r\n\r\n  return (\r\n    <div className={classNames} onClick={onHandleClick}>\r\n      {icon}\r\n      <span>{name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationListItem;\r\n","import React from \"react\";\r\nimport cs from 'classnames';\r\nimport NavigationListItem from \"../NavigationListItem/NavigationListItem\";\r\nimport { INavigationList } from \"../navigation.model\";\r\nimport { INavigationListItem } from \"./../navigation.model\";\r\nimport './NavigationList.scss';\r\n\r\nconst NavigationList: React.FC<INavigationList> = (props) => {\r\n  const { isOpen, navItems, selected, handleNavItemClick } = props;\r\n\r\n  const navListClassName = cs(\"navigation-list\", {\r\n    \"--isnavopen\": isOpen,\r\n  })\r\n\r\n  return (\r\n    <ul className={navListClassName}>\r\n      {navItems.map((item: INavigationListItem, i: number) => {\r\n\r\n        function handleClick () {\r\n          handleNavItemClick(item.key);\r\n        }\r\n\r\n        return <NavigationListItem key={item.key} name={item.name} icon={item.icon} isSelected={item.key === selected} onHandleClick={handleClick} />\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavigationList;\r\n","import React from \"react\";\r\nimport NavigationToggle from \"./NavigationToggle/NavigationToggle\";\r\nimport NavigationList from \"./NavigationList/NavigationList\";\r\nimport { INavigation } from \"./navigation.model\";\r\nimport './Navigation.scss';\r\n\r\n/**\r\n * The Navigation component is used to switch/jump between the skin parts.\r\n */\r\nconst Navigation: React.FC<INavigation> = (props) => {\r\n  const { isOpen, navItems, selected, handleNavToggle, handleNavItemClick } = props;\r\n\r\n  return (\r\n    <div className=\"navigation-container\">\r\n      <NavigationToggle isOpen={isOpen} handleNavToggle={handleNavToggle} />\r\n      <NavigationList selected={selected} isOpen={isOpen} navItems={navItems} handleNavItemClick={handleNavItemClick} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { IHasClassname, IHasStyles } from \"../../models/common.model\";\r\nimport './Playground.scss';\r\n\r\ninterface IPlayGround extends IHasClassname, IHasStyles {\r\n\r\n}\r\n\r\n/**\r\n * The playground used to interact with the generated avatar\r\n * @param props\r\n */\r\nexport const Playground: React.FC<IPlayGround> = props => {\r\n  const { children } = props;\r\n\r\n  return <div className=\"hac-main-playground\">{children}</div>;\r\n}\r\n\r\nexport default Playground;","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ninterface ILanguage {\r\n  nativeName: string;\r\n}\r\n\r\nexport const lngs: {[key: string]: ILanguage} = {\r\n  en: { nativeName: 'English' },\r\n  de: { nativeName: 'Deutsch' },\r\n  it: { nativeName: 'Italiano' }\r\n};\r\n\r\ni18n\r\n  // loads translations from your server\r\n  .use(Backend)\r\n  // detect user language\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  .init({\r\n    debug: true,\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    backend: {\r\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\r\n    },\r\n    ns: ['translation'],\r\n    defaultNS: 'translation',\r\n    react: {\r\n      useSuspense: true,\r\n      wait: true,\r\n    }\r\n  });\r\n\r\nexport default i18n;","export enum ITheme {\r\n  light = \"light\",\r\n  dark = \"dark\"\r\n}","import { ITheme } from \"../models/theme.model\";\r\n\r\nexport const changeTheme = (type: ITheme, changeTheme: React.Dispatch<React.SetStateAction<ITheme>>) => {\r\n  changeTheme(type);\r\n  document.documentElement.setAttribute(\"data-theme\", type);\r\n};","/**\r\n * Transforms a specific number to rem size\r\n * @param size The size in px that needs to be transformed\r\n * @returns The transformed rem size\r\n */\r\nexport const toRem = (size?: number): string | undefined => {\r\n  if (size) {\r\n    const remSize = size * 0.0625;\r\n    return `${remSize}rem`;\r\n  }\r\n};\r\n","import { CSSProperties } from \"react\";\r\nimport { IBorderRadius, IPosition, TriangleDirection } from \"./Forms.model\";\r\nimport { toRem } from \"./../../utils/forms.utils\";\r\n\r\n/**\r\n * A utility function to generate styles\r\n */\r\nexport function getCommonStyles(\r\n  bgColor?: string,\r\n  borderRadius?: number | IBorderRadius,\r\n  position?: IPosition,\r\n  scale?: number,\r\n  rotation?: number\r\n): CSSProperties {\r\n  const commonStyles: CSSProperties = {\r\n    backgroundColor: bgColor,\r\n    borderRadius: `${borderRadius}%`,\r\n    top: toRem(position?.top),\r\n    right: toRem(position?.right),\r\n    bottom: toRem(position?.bottom),\r\n    left: toRem(position?.left),\r\n    transform: `scale(${scale}) rotate(${rotation}deg)`,\r\n  };\r\n  return commonStyles;\r\n}\r\n\r\n/**\r\n * A utility function to generate the proper styles for triangle direction\r\n */\r\nexport function getTriangleDirection(\r\n  width: number,\r\n  height: number,\r\n  bgColor?: string,\r\n  direction?: TriangleDirection\r\n) {\r\n  let triangleDirectionStyles: CSSProperties = {};\r\n  switch (direction) {\r\n    case \"up\":\r\n      triangleDirectionStyles = {\r\n        borderLeft: `${toRem(width)} solid transparent`,\r\n        borderRight: `${toRem(width)} solid transparent`,\r\n        borderBottom: `${toRem(height)} solid ${bgColor}`,\r\n      };\r\n      break;\r\n    case \"down\":\r\n      triangleDirectionStyles = {\r\n        borderLeft: `${toRem(width)} solid transparent`,\r\n        borderRight: `${toRem(width)} solid transparent`,\r\n        borderTop: `${toRem(height)} solid ${bgColor}`,\r\n      };\r\n      break;\r\n    case \"right\":\r\n      triangleDirectionStyles = {\r\n        borderTop: `${toRem(width)} solid transparent`,\r\n        borderBottom: `${toRem(width)} solid transparent`,\r\n        borderLeft: `${toRem(height)} solid ${bgColor}`,\r\n      };\r\n      break;\r\n    case \"left\":\r\n      triangleDirectionStyles = {\r\n        borderTop: `${toRem(width)} solid transparent`,\r\n        borderBottom: `${toRem(width)} solid transparent`,\r\n        borderRight: `${toRem(height)} solid ${bgColor}`,\r\n      };\r\n      break;\r\n  }\r\n  return triangleDirectionStyles;\r\n}\r\n","import React, { CSSProperties, memo } from 'react';\r\nimport cs from 'classnames';\r\nimport { toRem } from '../../../utils/forms.utils';\r\nimport '../Forms.scss';\r\nimport { ICircle } from '../Forms.model';\r\nimport { getCommonStyles } from '../Forms.utils';\r\n\r\nconst Circle: React.FC<ICircle> = props => {\r\n  const { className, size, bgColor, position, scale, rotation, style } = props;\r\n\r\n  const classNames = cs('form', 'form-circle', className);\r\n\r\n  const circleStyle: CSSProperties = {\r\n    width: toRem(size),\r\n    height: toRem(size),\r\n    ...getCommonStyles(bgColor, 100, position, scale, rotation),\r\n    ...style\r\n  }\r\n\r\n  return <div className={classNames} style={circleStyle} />\r\n}\r\n\r\nCircle.defaultProps = {\r\n  scale: 1,\r\n}\r\n\r\nexport default memo(Circle);\r\n","import React, { CSSProperties, memo } from 'react';\r\nimport cs from 'classnames';\r\nimport '../Forms.scss';\r\nimport { ITriangle } from '../Forms.model';\r\nimport { getCommonStyles, getTriangleDirection } from '../Forms.utils';\r\n\r\nconst Triangle: React.FC<ITriangle> = props => {\r\n  const { className, borderRadius, bgColor, direction, height, position, scale, rotation, style, width } = props;\r\n\r\n  const classNames = cs('form', 'form-triangle', className);\r\n\r\n  const TriangleStyle: CSSProperties = {\r\n    width: 0,\r\n    height: 0,\r\n    ...getTriangleDirection(width, height, bgColor, direction),\r\n    ...getCommonStyles(undefined, borderRadius, position, scale, rotation),\r\n    ...style\r\n  }\r\n\r\n  return <div className={classNames} style={TriangleStyle} />\r\n}\r\n\r\nTriangle.defaultProps = {\r\n  direction: 'up',\r\n  scale: 1,\r\n}\r\n\r\nexport default memo(Triangle);\r\n","import React, { memo } from \"react\";\r\nimport cs from \"classnames\";\r\nimport \"./ThemeSwitch.scss\";\r\nimport { IThemeSwitch } from \"./ThemeSwitch.types\";\r\nimport { ITheme } from \"../../../models/theme.model\";\r\nimport Circle from \"../../Forms/Components/Circle\";\r\nimport Triangle from \"../../Forms/Components/Triangle\";\r\nimport { abort } from \"process\";\r\n\r\ninterface IThemeSwichIconProps {\r\n  /**\r\n   * The handler for changing theme\r\n   */\r\n  onHandleTheme?: () => void;\r\n}\r\n\r\nconst ThemeSwitchIcon: React.FC<IThemeSwichIconProps> = props => {\r\n  const { onHandleTheme } = props;\r\n\r\n  return (\r\n    <div className=\"hac-theme-switch-icon\">\r\n      <div className=\"hac-theme-sun\" onClick={onHandleTheme}>\r\n        <Triangle\r\n          width={12}\r\n          height={20}\r\n          bgColor={\"black\"}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"-15px\",\r\n            left: \"9px\",\r\n            transform: \"rotate(-6deg)\"\r\n          }}\r\n        />\r\n        <Circle\r\n          size={30}\r\n          bgColor={\"black\"}\r\n          style={{ position: \"absolute\", top: \"9px\", left: \"9px\" }}\r\n        />\r\n        <Triangle\r\n          width={12}\r\n          height={20}\r\n          bgColor={\"black\"}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"-4px\",\r\n            left: \"36px\",\r\n            transform: \"rotate(52deg)\"\r\n          }}\r\n        />\r\n        <Triangle\r\n          width={12}\r\n          height={20}\r\n          bgColor={\"black\"}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"24px\",\r\n            left: \"40px\",\r\n            transform: \"rotate(112deg)\"\r\n          }}\r\n        />\r\n        <Triangle\r\n          width={12}\r\n          height={20}\r\n          bgColor={\"black\"}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"43x\",\r\n            left: \"15px\",\r\n            transform: \"rotate(173deg)\"\r\n          }}\r\n        />\r\n        <Triangle\r\n          width={12}\r\n          height={20}\r\n          bgColor={\"black\"}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"31px\",\r\n            left: \"-7px\",\r\n            transform: \"rotate(112deg)\"\r\n          }}\r\n        />\r\n        <Triangle\r\n          width={12}\r\n          height={20}\r\n          bgColor={\"black\"}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"2px\",\r\n            left: \"-10px\",\r\n            transform: \"rotate(52deg)\"\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"hac-theme-moon\" onClick={onHandleTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * A component to switch the theme state beetween light /darkmode\r\n */\r\nconst ThemeSwitch: React.FC<IThemeSwitch> = (props) => {\r\n  const { current, onHandleThemeChange } = props;\r\n\r\n  const classNames = cs(\"hac-theme-switch\", {\r\n    \"is-light\": current === ITheme.light,\r\n    \"is-dark\": current === ITheme.dark,\r\n  });\r\n\r\n  return (\r\n    <div className={classNames}>\r\n      <ThemeSwitchIcon onHandleTheme={onHandleThemeChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ThemeSwitch);\r\n","import React, { useCallback, useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport { IHasClassname, IHasStyles } from \"../../models/common.model\";\r\nimport \"./Settings.scss\";\r\nimport ThemeSwitch from \"./ThemeSwitch/ThemeSwitch\";\r\n\r\ninterface ISettings extends IHasClassname, IHasStyles {}\r\n\r\n/**\r\n * A component to display the icon for the settings\r\n */\r\nexport const SettingsWheel: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"cog-1 settings-icon\" />\r\n      <div className=\"cog-2 settings-icon\" />\r\n      <div className=\"circle-settings\" />\r\n      <div className=\"cog-3 settings-icon\" />\r\n      <div className=\"cog-4 settings-icon\" />\r\n    </>\r\n  );\r\n};\r\n\r\n/**\r\n * A component to change the general settings of the app\r\n */\r\nexport const Settings: React.FC<ISettings> = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSettingsVisibleChange = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen]);\r\n\r\n  const classNames = cs(\"hac-settings\", {\r\n    \"is-open\": isOpen,\r\n  });\r\n\r\n  return (\r\n    <div className=\"hac-settings-container\">\r\n      <button\r\n        type=\"button\"\r\n        className={classNames}\r\n        onClick={handleSettingsVisibleChange}\r\n        onKeyDown={handleSettingsVisibleChange}\r\n      >\r\n        <SettingsWheel />\r\n      </button>\r\n      <div className=\"hac-settings-menu\">\r\n        <b>Language</b>\r\n        <ul>\r\n          <li>EN - English</li>\r\n          <li>DE - German</li>\r\n          <li>IT - Italian</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { Profiler, useCallback, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Header, MainContainer, Playground, Navigation } from \"./components\";\r\nimport { lngs } from \"./i18n\";\r\nimport { ITheme } from \"./models/theme.model\";\r\nimport { changeTheme } from \"./utils/theme.utils\";\r\nimport { INavigationListItem } from \"./components/Navigation/navigation.model\";\r\nimport Circle from \"./components/Forms/Components/Circle\";\r\nimport Oval from \"./components/Forms/Components/Oval\";\r\nimport Square from \"./components/Forms/Components/Square\";\r\nimport Rectangle from \"./components/Forms/Components/Rectangle\";\r\nimport Triangle from \"./components/Forms/Components/Triangle\";\r\nimport ThemeSwitch from \"./components/Settings/ThemeSwitch/ThemeSwitch\";\r\nimport { Settings } from \"./components/Settings\";\r\n\r\n//TODO: Rename all .model in .types files.\r\n\r\n/**\r\n * The main component which renders the application.\r\n */\r\nconst App: React.FC = () => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\r\n  const [selectedItem, setSelectedItem] = useState<string>();\r\n  const [activeTheme, setActiveTheme] = useState<ITheme>(ITheme.light);\r\n\r\n  // TODO: Add icons to navigation\r\n  const navigationItems: INavigationListItem[] = [\r\n    {\r\n      // Include blush, include neck\r\n      key: \"face\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.face\"),\r\n    },\r\n    {\r\n      // Include fringe\r\n      key: \"hair\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.hair\"),\r\n    },\r\n    {\r\n      // Include eyebrown\r\n      key: \"eyes\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.eyes\"),\r\n    },\r\n    {\r\n      key: \"nose\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.nose\"),\r\n    },\r\n    {\r\n      key: \"mouth\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.mouth\"),\r\n    },\r\n    {\r\n      key: \"body\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.body\"),\r\n    },\r\n    {\r\n      key: \"accessories\",\r\n      icon: <></>,\r\n      name: t(\"body_parts.accessories\"),\r\n    },\r\n  ];\r\n\r\n  const onInitialRender = useCallback(\r\n    (\r\n      id?: string,\r\n      phase?: \"mount\" | \"update\",\r\n      actualDuration?: number,\r\n      baseDuration?: number,\r\n      startTime?: number,\r\n      commitTime?: number,\r\n      interactions?: any\r\n    ) => {\r\n      if (phase === \"mount\") {\r\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  /**\r\n   * A method to toggle the Theme beetween light/dark\r\n   */\r\n  const toggleTheme = useCallback(() => {\r\n    switch (activeTheme) {\r\n      case ITheme.light:\r\n        changeTheme(ITheme.dark, setActiveTheme);\r\n        break;\r\n      case ITheme.dark:\r\n        changeTheme(ITheme.light, setActiveTheme);\r\n        break;\r\n    }\r\n  }, [activeTheme]);\r\n\r\n  /**\r\n   * A method to toggle the Navigation beetween open/close\r\n   */\r\n  const handleOnToggleClick = useCallback(() => {\r\n    isNavOpen ? setIsNavOpen(false) : setIsNavOpen(true);\r\n  }, [isNavOpen]);\r\n\r\n  /**\r\n   * A method to handle the on click on navigation items\r\n   */\r\n  const handleOnNavItemClick = useCallback((key: string) => {\r\n    setSelectedItem(key);\r\n  }, []);\r\n\r\n  return (\r\n    <Profiler id=\"App\" onRender={onInitialRender}>\r\n      <Header>\r\n        <Settings />\r\n      </Header>\r\n      <Navigation\r\n        navItems={navigationItems}\r\n        selected={selectedItem}\r\n        isOpen={isNavOpen}\r\n        handleNavToggle={handleOnToggleClick}\r\n        handleNavItemClick={handleOnNavItemClick}\r\n      />\r\n      <MainContainer isNavOpen={isNavOpen}>\r\n        <Playground>\r\n          {/* <Circle size={26} bgColor={\"var(--font-color)\"} position={{ top: 10, left: 10 }} />\r\n          <Oval width={30} height={20} bgColor={\"var(--font-color)\"} position={{ top: 50, left: 10 }}/>\r\n          <Square size={30} bgColor={\"var(--font-color)\"} position={{ top: 100, left: 10 }} />\r\n          <Rectangle width={30} height={10} bgColor={\"var(--font-color)\"} position={{ top: 150, left: 10 }} />\r\n          <Triangle width={12} height={12} bgColor={\"red\"} position={{ top: 200, left: 10 }} />\r\n          <Triangle width={12} height={12} bgColor={\"green\"} direction=\"down\" position={{ top: 250, left: 10 }} />\r\n          <Triangle width={12} height={12} bgColor={\"blue\"} direction=\"left\" position={{ top: 300, left: 10 }} />\r\n          <Triangle width={12} height={12} bgColor={\"orange\"} direction=\"right\" position={{ top: 350, left: 10 }} rotation={20} /> */}\r\n        </Playground>\r\n        <ThemeSwitch current={activeTheme} onHandleThemeChange={toggleTheme} />\r\n      </MainContainer>\r\n      {Object.keys(lngs).map((lng) => (\r\n        <button\r\n          key={lng}\r\n          style={{ fontWeight: i18n.language === lng ? \"bold\" : \"normal\" }}\r\n          type=\"submit\"\r\n          onClick={() => i18n.changeLanguage(lng)}\r\n        >\r\n          {lngs[lng].nativeName}\r\n        </button>\r\n      ))}\r\n    </Profiler>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss';\r\nimport './styles/_theme.scss';\r\n\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={\"...app is loading\"}>\r\n      <App />\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}